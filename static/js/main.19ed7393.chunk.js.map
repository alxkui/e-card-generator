{"version":3,"sources":["Components/Header.js","Components/Save.js","Components/CanvasContext.js","Components/Share.js","Components/Image.js","Components/ImagesContext.js","Components/ImageSelector.js","Components/ImageSelectorButton.js","Components/FormElements.js","Components/Canvas.js","App.js","index.js"],"names":["Header","className","Save","useState","loading","setLoading","data-toggle","data-target","id","tabindex","role","type","data-dismiss","aria-label","aria-hidden","class","onClick","node","document","querySelector","htmlToImage","toPng","then","dataUrl","download","finally","toJpeg","quality","toSvgDataURL","filter","tagName","CanvasContext","createContext","CanvasProvider","props","isOpened","bg","bgPosX","bgPosY","message","color","owner","ownerColor","size","ownerSize","x","y","tx","ty","overlay","overlayColor","overlayOpacity","messageFont","ownerFont","CanvasSettings","setCanvasSettings","Provider","value","children","Share","link","setlink","useContext","uploadApi","image","console","log","config","headers","Axios","post","res","data","replace","FacebookShareButton","hashtag","quote","url","FacebookIcon","round","WhatsappShareButton","title","separator","WhatsappIcon","TwitterShareButton","via","TwitterIcon","RedditShareButton","RedditIcon","Image","alt","crossOrigin","e","target","attributes","src","initialState","images","error","ImagesContext","reducer","state","action","payload","ImagesProvider","useReducer","dispatch","a","get","links","hits","map","img","push","largeImageURL","searchQuery","encodeURI","getImages","updateImages","ImageSelector","context","query","useRef","useEffect","style","onSubmit","preventDefault","current","ref","placeholder","rel","href","width","ImageSelectorButton","FormElements","colors","aria-controls","aria-selected","aria-labelledby","onChange","for","onChangeComplete","hex","triangle","apiKey","activeFontFamily","nextFont","family","min","max","step","Canvas","textStyle","position","fontSize","top","left","bottom","right","fontFamily","ownerTextStyle","imageStyle","objectPosition","overlayStyle","background","opacity","border","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19ed7393.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <>\n            <h1 className=\"logo\">E-CARD GENERATOR</h1>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\n\nexport const Save = () => {\n\n    const [loading, setLoading] = useState(false);\n\n    const handleDownloadPng = () => {\n\n        let node = document.querySelector('.canvas-element');\n\n        setLoading(true);\n\n        htmlToImage.toPng(node)\n        .then(function (dataUrl) {\n            download(dataUrl, 'your_custom_ecard.png');\n        })\n        .finally(()=> {\n            setLoading(false);\n        });\n\n    }\n\n    const handleDownloadJpg = () => {\n\n        let node = document.querySelector('.canvas-element');\n\n        setLoading(true);\n\n        htmlToImage.toJpeg(node, {quality: 1})\n        .then(function (dataUrl) {\n            download(dataUrl, 'your_custom_ecard.jpg');\n        })\n        .finally(() => {\n            setLoading(false);\n        });\n\n    }\n\n    const handleDownloadSvg = () => {\n\n        let node = document.querySelector('.canvas-element');\n\n        function filter(node) {\n            return (node.tagName !== 'i');\n        }\n\n        setLoading(true);\n\n        htmlToImage.toSvgDataURL(node, {filter: filter})\n        .then(function (dataUrl) {\n            download(dataUrl, 'your_custom_ecard.svg');\n        })\n        .finally(() => {\n            setLoading(false);\n        });\n\n    }\n\n    return (\n        <>\n        <button data-toggle=\"modal\" data-target=\"#savepopup\" className=\"btn btn-success\">Save</button>\n        \n        <div className=\"modal fade\" id=\"savepopup\" tabindex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Save as...</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body text-center\">\n                        {!loading ?\n                        <>\n                            <button className=\"btn btn-primary\" onClick={ handleDownloadPng } >Save as .PNG</button>\n                            <button className=\"btn btn-primary\" onClick={ handleDownloadJpg } >Save as .JPG</button>\n                            <button className=\"btn btn-primary\" onClick={ handleDownloadSvg }>Save as .SVG</button>\n                        </>\n                        :\n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border text-danger\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, { useState, createContext } from 'react';\n\nexport const CanvasContext = createContext();\nexport const CanvasProvider = ( props ) => {\n\n    const [CanvasSettings, setCanvasSettings] = useState({\n        isOpened: 'closed',\n        bg: null,\n        bgPosX: 0,\n        bgPosY: 0,\n        message: \"\",\n        color: null,\n        owner: \"\",\n        ownerColor: null,\n        size: 35,\n        ownerSize: 15,\n        x: 0,\n        y: 0,\n        tx: 5,\n        ty: 90,\n        overlay: false,\n        overlayColor: null,\n        overlayOpacity: 0,\n        messageFont: \"Montserrat\",\n        ownerFont: \"Montserrat\"\n    });\n\n    //const [isOpened, setIsOpened] = useState('closed');\n\n    return (\n        <CanvasContext.Provider value={[CanvasSettings, setCanvasSettings]}>\n            { props.children }\n        </CanvasContext.Provider>\n    );\n}\n\n","import React, {useState, useContext} from 'react'\nimport {\n    FacebookShareButton,\n    RedditShareButton,\n    TwitterShareButton,\n    WhatsappShareButton,\n    FacebookIcon,\n    RedditIcon,\n    TwitterIcon,\n    WhatsappIcon,\n} from \"react-share\";\nimport Axios from 'axios';\nimport htmlToImage from 'html-to-image';\nimport { CanvasContext } from './CanvasContext';\n\nexport const Share = () => {\n\n    const [link, setlink] = useState(null);\n    const [CanvasSettings] = useContext(CanvasContext);\n\n    const convertImage = () => {\n        console.log(\"CONVERT IMAGE\");\n\n        // Const image\n        let image = \"\";\n        // Get html node for canvas\n        let node = document.querySelector('.canvas-element');\n\n        // Convert html to png\n        return htmlToImage.toPng(node)\n        .then(function (dataUrl) {\n            image = dataUrl.replace(\"data:image/png;base64\", \"\");\n        })\n        .finally(() => {\n            uploadApi(image);\n        });\n\n    }\n\n    const uploadApi = (image) => {\n        console.log(\"UPLOAD API\");\n\n        // Client ID\n        const CLIENT_ID = 'e426f19bd2869d8';\n\n        // Set headers for post request to imgur\n        const config = {\n            headers : {\n                'Authorization': 'Client-ID ' + CLIENT_ID,\n            },\n            type: 'URL'\n        }\n\n        Axios.post('https://api.imgur.com/3/image', image, config)\n        .then((res) => {\n            setlink(res.data.data.link);\n        });\n\n    }\n\n    return (\n        <>\n        <button onClick={convertImage} data-toggle=\"modal\" data-target=\"#sharepopup\" class=\"btn btn-primary\">Share</button>\n\n        <div className=\"modal fade\" id=\"sharepopup\" tabindex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog modal-dialog-centered\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Share On...</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body text-center\">\n                        {link ? \n                            <>\n                                <FacebookShareButton hashtag=\"Alex's E-Card Generator\" quote={'Hi ' + CanvasSettings.owner + ' I would like to send this e-card to you!'} url={link} children={<FacebookIcon size={32} round={true} />}/>\n                                <WhatsappShareButton title={'Hi ' + CanvasSettings.owner + ' I would like to send this e-card to you!'} separator=\" - \" url={link} children={<WhatsappIcon size={32} round={true}/>} />\n                                <TwitterShareButton title={'Hi ' + CanvasSettings.owner + ' I would like to send this e-card to you!'} url={link} via={\"Alex's E-Card Generator\"} children={<TwitterIcon size={32} round={true}/>} />\n                                <RedditShareButton title={'Hi ' + CanvasSettings.owner + ' I would like to send this e-card to you!'} url={link} children={<RedditIcon size={32} round={true} />} />\n                            </>\n                        : \n                            <div class=\"d-flex justify-content-center\">\n                                <div class=\"spinner-border text-danger\" role=\"status\">\n                                    <span class=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport { CanvasContext } from './CanvasContext';\n\nexport const Image = (props) => {\n\n    const [CanvasSettings, setCanvasSettings] = useContext(CanvasContext);\n\n\n    const handleImageClick = (e) => {\n        setCanvasSettings({...CanvasSettings, bg: e.target.attributes.src.value, isOpened: 'closed'});\n    }\n\n    return (\n        <img alt=\"\" className=\"thumbnail\" crossOrigin=\"Anonymous\" onClick={handleImageClick} src={props.link} />\n    )\n}\n","import React, { useReducer, createContext } from 'react'\nimport Axios from 'axios';\n\nconst initialState = {\n    images: [],\n    error: \"\",\n    loading: true\n}\n\n// Create context\nexport const ImagesContext = createContext(initialState);\n\n// Reducer\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"GET_IMAGES\":\n            return {...state, images: action.payload, loading: false}\n        case \"UPDATE_IMAGES\":\n            return {...state, images: action.payload, loading: false}\n        case \"LOADING\":\n            return {...state, loading: action.payload}\n        default:\n            return state;\n    }\n}\n\n// Provider component\nexport const ImagesProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    async function getImages() {\n        try {\n            dispatch({\n                type: \"LOADING\",\n                payload: true\n            });\n\n            const res = await Axios.get('https://pixabay.com/api/?key=16518382-12f75c06db3efbe01828c4049&q=yellow+flowers&image_type=photo&per_page=30');\n            let links = [];\n            \n            // loop through images\n            res.data.hits.map(img => links.push(img.largeImageURL));\n            \n            dispatch({\n                type: \"GET_IMAGES\",\n                payload: links\n            });\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    async function updateImages(searchQuery) {\n        try {\n            dispatch({\n                type: \"LOADING\",\n                payload: true\n            });\n            \n            const res = await Axios.get('https://pixabay.com/api/?key=16518382-12f75c06db3efbe01828c4049&q=' + encodeURI(searchQuery).replace('%20', '+') + '&image_type=photo&per_page=30');\n            let links = [];\n\n            // loop through images\n            res.data.hits.map(img => links.push(img.largeImageURL));\n\n            dispatch({\n                type: \"UPDATE_IMAGES\",\n                payload: links\n            })\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <ImagesContext.Provider value={{\n            images: state.images,\n            loading: state.loading,\n            getImages: getImages,\n            updateImages: updateImages,\n        }}>\n            { children }\n        </ImagesContext.Provider>\n    )\n}\n","import React from 'react'\nimport { useEffect, useRef, useContext } from 'react';\nimport { Image } from './Image';\nimport { ImagesContext } from './ImagesContext';\n\nexport const ImageSelector = ( props ) => {\n\n    const context = useContext(ImagesContext);\n    const query = useRef();\n\n    useEffect(() => {\n        context.getImages();\n    }, []);\n\n    const update = (e) => {\n        e.preventDefault();\n        context.updateImages(query.current.value);\n        query.current.value = \"\";\n    }\n\n    return (\n        <div className={'image-selector ' + props.style}>\n            <div className=\"container\">\n                <h1>Select An Image</h1>\n                <form onSubmit={update} className=\"form-inline\">\n                    <div className=\"form-group mx-sm-3 mb-2\">\n                        <input type=\"text\" ref={query} className=\"form-control\" placeholder=\"Search Term\"/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary mb-2\">Search</button>\n                    <a class=\"pixabay\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pixabay.com\"><img alt=\"pixabay logo\" width=\"120\" src=\"https://pixabay.com/static/img/logo.svg\"></img></a>\n                </form>\n\n                { context.loading ?\n                    <div class=\"d-flex justify-content-center\">\n                        <div class=\"spinner-border text-danger\" role=\"status\">\n                            <span class=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                : \n                    context.images.map(link => <Image link={link}/>)\n                }\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { ImageSelector } from './ImageSelector';\nimport { CanvasContext } from './CanvasContext';\n\nexport const ImageSelectorButton = (props) => {\n\n    const [CanvasSettings, setCanvasSettings] = useContext(CanvasContext);\n\n    function handleImageSelector(e) {\n        setCanvasSettings({...CanvasSettings, isOpened: 'opened'});\n    }\n\n    return (\n        <>\n            <button onClick={handleImageSelector} class=\"btn btn-danger btn-lg btn-block\">\n                { !CanvasSettings.bg ? \"Select Image\" : \"Change Image\" }\n            </button>\n\n            <ImageSelector style={ CanvasSettings.isOpened } />   \n        </>    \n    )\n}\n","import React, {useContext} from 'react'\nimport {CanvasContext} from './CanvasContext';\nimport { TwitterPicker } from 'react-color';\nimport FontPicker from \"font-picker-react\";\n\nexport const FormElements = () => {\n\n    const [CanvasSettings, setCanvasSettings] = useContext(CanvasContext);\n\n    const updateMessage = (e) => {\n        setCanvasSettings({...CanvasSettings, message: e.target.value})\n    }\n\n    const updateOwner = (e) => {\n        setCanvasSettings({...CanvasSettings, owner: e.target.value})\n    }\n\n    const updateColor = (color) => {\n        setCanvasSettings({...CanvasSettings, color: color.hex})\n    }\n\n    const updateSize = (e) => {\n        setCanvasSettings({...CanvasSettings, size: e.target.value})\n    }\n\n    const updatePosX = (e) => {\n        setCanvasSettings({...CanvasSettings, x: e.target.value})\n    }\n\n    const updatePosY = (e) => {\n        setCanvasSettings({...CanvasSettings, y: e.target.value})\n    }\n\n    const colors = ['#FFFFFF', '#000000', '#7BDCB5', '#00D084', '#8ED1FC', '#0693E3', '#ABB8C3', '#EB144C', '#F78DA7', '#9900EF'];\n\n    return (\n        <form>\n            {/* TAB NAVIGATION */}\n            <ul className=\"nav nav-pills nav-fill mb-4 mt-4\" id=\"pills-tab\" role=\"tablist\">\n                <li className=\"nav-item\">\n                    <a className=\"nav-link active\" id=\"pills-message-tab\" data-toggle=\"pill\" href=\"#pills-message\" role=\"tab\" aria-controls=\"pills-message\" aria-selected=\"true\">Message Text</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" id=\"pills-to-tab\" data-toggle=\"pill\" href=\"#pills-to\" role=\"tab\" aria-controls=\"pills-to\" aria-selected=\"true\">To Text</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" id=\"pills-image-tab\" data-toggle=\"pill\" href=\"#pills-image\" role=\"tab\" aria-controls=\"pills-image\" aria-selected=\"true\">Image</a>\n                </li>\n            </ul>\n\n            <div className=\"tab-content\" id=\"pills-tabContent\">\n\n                {/* PERSONALISED MESSAGE */}\n                <div className=\"tab-pane fade show active\" id=\"pills-message\" role=\"tabpanel\" aria-labelledby=\"pills-message\">\n                    <div className=\"form-group\">\n                        <label>Your Personalised Message</label>\n                        <input type=\"text\" onChange={updateMessage} className=\"form-control\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Text Color</label><br />\n                        <TwitterPicker onChangeComplete={ updateColor } colors={colors} triangle=\"hide\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Font</label><br/>\n                        <FontPicker\n                        apiKey=\"AIzaSyAtC8ih0vC0e2aXsKmmT6_CQrtVlgvTybc\"\n                        activeFontFamily={CanvasSettings.messageFont}\n                        onChange={(nextFont) =>\n                            setCanvasSettings({...CanvasSettings, messageFont: nextFont.family})\n                        }\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Font Size</label>\n                        <input type=\"range\" className=\"custom-range\" value={ CanvasSettings.size } onChange={ updateSize } min=\"15\" max=\"100\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Position</label><br />\n                        X<input type=\"range\" className=\"custom-range\" value={ CanvasSettings.x } onChange={ updatePosX } min=\"0\" max=\"100\"/>\n                        Y<input type=\"range\" className=\"custom-range\" value={ CanvasSettings.y } onChange={ updatePosY } min=\"0\" max=\"100\"/>\n                    </div>\n                </div>\n\n                {/* TO TEXT */}\n                <div className=\"tab-pane fade\" id=\"pills-to\" role=\"tabpanel\" aria-labelledby=\"pills-to\">\n                    <div className=\"form-group\">\n                        <label>To Whomever Owns This Card</label>\n                        <input type=\"text\" onChange={updateOwner} className=\"form-control\" />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Text Color</label><br />\n                        <TwitterPicker colors={colors} onChangeComplete={ (color) => {setCanvasSettings({...CanvasSettings, ownerColor: color.hex})} } triangle=\"hide\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                    <label>Font</label><br />\n                        <FontPicker\n                        apiKey=\"AIzaSyAtC8ih0vC0e2aXsKmmT6_CQrtVlgvTybc\"\n                        activeFontFamily={CanvasSettings.ownerFont}\n                        onChange={(nextFont) =>\n                            setCanvasSettings({...CanvasSettings, ownerFont: nextFont.family})\n                        }\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Font Size</label>\n                        <input type=\"range\" className=\"custom-range\" value={ CanvasSettings.ownerSize } onChange={ (e) => {setCanvasSettings({...CanvasSettings, ownerSize: e.target.value})} } min=\"15\" max=\"100\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Position</label><br />\n                        X<input type=\"range\" className=\"custom-range\" value={ CanvasSettings.tx } onChange={ (e) => {setCanvasSettings({...CanvasSettings, tx: e.target.value})} } min=\"0\" max=\"100\"/>\n                        Y<input type=\"range\" className=\"custom-range\" value={ CanvasSettings.ty } onChange={ (e) => {setCanvasSettings({...CanvasSettings, ty: e.target.value})} } min=\"0\" max=\"100\"/>\n                    </div>\n\n                </div>\n\n                 {/* Image */}\n                <div className=\"tab-pane fade\" id=\"pills-image\" role=\"tabpanel\" aria-labelledby=\"pills-image\">\n                    { CanvasSettings.bg ?\n                    <>\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Image Position</label><br />\n                        X<input type=\"range\" className=\"custom-range\" value={ CanvasSettings.bgPosX } onChange={ (e) => {setCanvasSettings({...CanvasSettings, bgPosX: e.target.value})} } min=\"0\" max=\"100\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <div class=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" onClick={ () => {setCanvasSettings({...CanvasSettings, overlay: !CanvasSettings.overlay})} } id=\"customCheck1\" />\n                            <label class=\"custom-control-label\" for=\"customCheck1\">Enable Overlay</label>\n                        </div>\n                    </div>\n\n                    { CanvasSettings.overlay ?\n                    <>\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Opacity Color</label><br />\n                        <TwitterPicker colors={colors} onChangeComplete={ (color) => {setCanvasSettings({...CanvasSettings, overlayColor: color.hex})} } triangle=\"hide\"/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"customRange1\">Opacity</label><br />\n                        <input type=\"range\" className=\"custom-range\" value={ CanvasSettings.overlayOpacity } onChange={ (e) => {setCanvasSettings({...CanvasSettings, overlayOpacity: e.target.value})} } step=\"0.1\" min=\"0.0\" max=\"1.0\"/>\n                    </div>\n                    </>\n                    : <p>Please enable overlay to see more settings</p> }\n                    </>\n                    : <p>Please select an image before changing the settings here</p>}\n                </div>\n            </div>\n\n        </form>\n    )\n}\n","import React, { useContext } from 'react'\n\nimport { Save } from './Save';\nimport { Share } from './Share';\nimport { ImageSelectorButton } from './ImageSelectorButton';\nimport { FormElements } from './FormElements.js';\nimport { CanvasContext } from './CanvasContext';\n\nexport const Canvas = () => {\n\n    const [CanvasSettings] = useContext(CanvasContext);\n\n    const textStyle = {\n        position: 'absolute',\n        fontSize: CanvasSettings.size + \"px\",\n        top: CanvasSettings.y + \"%\",\n        left: CanvasSettings.x + \"%\",\n        bottom: 0,\n        right: 0,\n        color: CanvasSettings.color,\n        fontFamily: CanvasSettings.messageFont\n    }\n\n    const ownerTextStyle = {\n        position: 'absolute',\n        color: CanvasSettings.ownerColor,\n        fontSize: CanvasSettings.ownerSize + \"px\",\n        top: CanvasSettings.ty + \"%\",\n        left: CanvasSettings.tx + \"%\",\n        bottom: 0,\n        right: 0,\n        fontFamily: CanvasSettings.ownerFont\n    }\n\n    const imageStyle = {\n        objectPosition: `${CanvasSettings.bgPosX}% ${CanvasSettings.bgPosY}%`\n    }\n\n    const overlayStyle = {\n        background: CanvasSettings.overlayColor,\n        opacity: CanvasSettings.overlayOpacity\n    }\n\n    const canvasStyle = {\n        border: \"1px solid rgb(226, 226, 226)\"\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col align-self-center control\">\n                <ImageSelectorButton/>\n\n                <FormElements />\n\n                <Save />\n                <Share />\n            </div>\n            <div style={!CanvasSettings.bg ? canvasStyle : null} className=\"col canvas-element\">\n                {CanvasSettings.overlay ? <div style={overlayStyle} className=\"overlay\"></div> : \"\"}\n                {CanvasSettings.bg ? <img alt=\"\" style={imageStyle} src={CanvasSettings.bg}/> : \"\"}\n                <h3 style={textStyle}>{ CanvasSettings.message }</h3>\n                <h4 style={ownerTextStyle} className=\"small-text\">{ CanvasSettings.owner }</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './style.css';\nimport { Header } from './Components/Header';\nimport { Canvas } from './Components/Canvas';\nimport { CanvasProvider } from './Components/CanvasContext';\nimport { ImagesProvider } from './Components/ImagesContext';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div class=\"container\">\n        <CanvasProvider>\n          <Header />\n          <ImagesProvider>\n            <Canvas />\n          </ImagesProvider>\n        </CanvasProvider>\n        <footer><p class=\"footer text-center\">Web app created by Alex Kovacs &copy; 2020</p></footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}